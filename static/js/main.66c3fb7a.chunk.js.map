{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","playerOne","playerTwo","gameOver","setgameOver","currentplayer","setcurrentplayer","plays","setplays","draw","setdraw","result","setResult","checkResult","i","arr","uniques","Array","from","Set","length","checkVertical","checkHorizontal","diagLeft","diagRight","uniqueLeft","uniqueRight","checkDiagonal","handlePlay","e","element","target","innerHTML","span","document","createElement","classList","add","col","getAttribute","row","parentElement","tempArr","appendChild","className","onClick","window","location","reload","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.66c3fb7a.chunk.js","sourcesContent":["import { useState } from 'react';\nimport './App.css';\nfunction App() {\n  const [playerOne] = useState('X');\n  const [playerTwo] = useState('O');\n  const [gameOver, setgameOver] = useState(false);\n  const [currentplayer, setcurrentplayer] = useState(playerOne);\n  const [ plays, setplays] =useState(1);\n  const [ draw,setdraw] =useState(false);\n  const [result,setResult ] = useState([\n    ['', '', ''],\n    ['', '', ''],\n    ['', '', ''],\n  ])\n  function checkResult() {\n    setplays(plays + 1);\n    if(checkVertical() || checkHorizontal() || checkDiagonal()){\n    setgameOver(true);\n    return;\n  }\n  setcurrentplayer(currentplayer === playerOne ? playerTwo : playerOne);\n  \n  if(plays >=9){\n    setgameOver(true);\n    setdraw(true);\n    return;\n  }\n  }\n  \n  function checkVertical () {\n    for(let i= 0;i<3;i++){\n      const arr = [result[0][i], result[1][i], result[2][i]];\n      const uniques = Array.from(new Set(arr));\n      if(uniques.length === 1 && uniques[0]){\n            return true;\n      }\n    }\n  }\n\n  function checkHorizontal() {\n    for(let i=0;i<3;i++){\n      const arr=[...result[i]];\n      const uniques = Array.from(new Set(arr));\n      if(uniques.length === 1 && uniques[0]){\n      return true;\n      }\n    }\n  }\n\n  function checkDiagonal() {\n    const diagLeft = [result[0][0],result[1][1],result[2][2]];\n    const diagRight=[result[0][2],result[1][1],result[2][0]];\n\n    const uniqueLeft = Array.from(new Set(diagLeft));\n    const uniqueRight = Array.from(new Set(diagRight));\n\n    if(\n      (uniqueLeft.length === 1 && uniqueLeft[0]) || \n    (uniqueRight.length === 1 && uniqueRight[0])\n    ){\n      return true;\n    }\n   }\n   function restart(){\n     window.location.reload();\n   }\n  function handlePlay(e){\n    const element =e.target;\n\n    if(!element.innerHTML && !gameOver){\n    const span = document.createElement('span');\n    span.classList.add('fade-in');\n    span.innerHTML = currentplayer;\n    const col = element.getAttribute('data-col');\n    const row = element.parentElement.getAttribute('data-row');\n    const tempArr =[...result];\n    tempArr[row - 1][col - 1] = currentplayer;\n    setResult(tempArr); \n    element.appendChild(span);\n    checkResult();\n    \n   \n    \n    }\n  }\n\n\n  return (\n    <div className=\"App\">\n     <div className=\"inner-container\">\n     \n     <h1>Tic Tac Toe! Created by Prince</h1>\n     <p>{!gameOver && `${currentplayer} it's your turn!`}</p>\n     {gameOver && (\n       <h2 className=\"game-over\">\n         Game Over!{' '} \n         {draw ? \"Its a draw\" : `${currentplayer} is the Winner!`}\n     </h2>\n     )}\n\n     <table>\n       <tr data-row=\"1\">\n         <td data-col=\"1\" onClick={handlePlay}></td>\n         <td data-col=\"2\"  onClick={handlePlay}></td>\n         <td data-col=\"3\"  onClick={handlePlay}></td>\n       </tr>\n       <tr data-row=\"2\">\n         <td data-col=\"1\"  onClick={handlePlay}></td>\n         <td data-col=\"2\"  onClick={handlePlay}></td>\n         <td data-col=\"3\"  onClick={handlePlay}></td>\n       </tr>\n       <tr data-row=\"3\">\n         <td data-col=\"1\"  onClick={handlePlay}></td>\n         <td data-col=\"2\"  onClick={handlePlay}></td>\n         <td data-col=\"3\"  onClick={handlePlay}></td>\n       </tr>\n     </table>\n     {gameOver && <button className=\"restart-btn\" onClick={restart}>Restart</button>}\n     </div>\n     \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}